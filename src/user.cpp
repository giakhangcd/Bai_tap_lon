#include "../include/user.h"
#include "../include/file_utils.h"
#include "../include/ui.h"
#include <functional>
#include <sstream>
#include <ctime>
#include <iostream>
#include <fstream>
#include <vector>
using namespace std;

User::User(const string& uname, const string& pwd, bool isAuto) : username(uname), password(pwd) , isAutoGenerated(isAuto){}

string User::getUsername() const { return username; }
string User::getPassword() const { return password; }
bool User::IsAuto() { return isAutoGenerated; }

string hashPassword(const string& password) {
    hash<string> hasher;
    return to_string(hasher(password));
}
string AutoGenerated() {
	const string chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
    string password;
    srand(time(0)); // Kh?i t?o seed cho random
    for (int i = 0; i < 10; i++) {
        password += chars[rand() % chars.length()];
    }
    return password;
}
bool registerUser(const string& username, const string& password, bool isAuto) {
    // Ki?m tra kho?ng tr?ng
    if (username.find(" ") != string::npos || password.find(" ") != string::npos) {
        return false;
    }
    // Ki?m tra xem username dã t?n t?i chua
    if (findUser(username)) {
        return false;	
    }
    // Luu thông tin
    string hashed = hashPassword(password);
    if (isAuto) {
    	writeToFile("data/users.dat", username + "|" + hashed + "|" + "1");
	}
    if (!isAuto) {
    	writeToFile("data/users.dat", username + "|" + hashed + "|" + "0");
	}
    return true;
}

bool ChangePassword(const string& username, const string& Newpassword) {
	if (Newpassword.find(" ") != string::npos) {
        return false;
    }
    vector<string> lines = readFromFile("data/users.dat");
    ofstream file("data/users.dat");
    bool found = false;
    for (const auto& line : lines) {
        stringstream ss(line);
        string fileUser, filePass, autoGen;
        getline(ss, fileUser, '|');
        getline(ss, filePass, '|');
        getline(ss, autoGen, '|');
        if (username == fileUser) {
            string newHashed = hashPassword(Newpassword);
            file << fileUser << "|" << newHashed << "|0\n"; 
            found = true;
        } else {
            file << line << "\n";
        }
    }
    file.close();
    return found;
}

bool loginUser(const string& username, const string& password) {
    string hashed = hashPassword(password);
    vector<string> lines = readFromFile("data/users.dat");
    
    for (const auto& line : lines) {
        stringstream ss(line);
        string fileUser, filePass, autoGen;
        getline(ss, fileUser, '|');
        getline(ss, filePass, '|');
        getline(ss, autoGen, '|');
	    if (username == fileUser && hashed == filePass) {
	    	if (autoGen == "0") {return true;}
	    	else {
	    		while (true) {
	    			string Newpassword = getInput("Please enter your new password: ");
		    		if (ChangePassword(username, Newpassword)) {
		    			break;
					} else {
						showMessage("Invalid input!\n");
					}
				}
			}
	        return true;
	    }
	    return false;
	}
}


